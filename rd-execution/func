

----------CFG Label/AST Map Verification

Label: 1 Stmt: int t = 3
Label: 2 Stmt: int add(int x, int y)
Label: 3 Stmt: int result = (x + y)
Label: 4 Stmt: if (((x + y) > 0)) 
Label: 5 Stmt: result = 0
Label: 6 Stmt: return result
Label: 7 Stmt: bool equal(int x, int y)
Label: 8 Stmt: bool result = (x == y)
Label: 9 Stmt: return result
Label: 10 Stmt: int z = 3
Label: 11 Stmt: print (t * z)


----------CFG EdgeMap Verification

(1,10)
(3,4)
(4,5)
(5,6)
(8,9)
(10,11)


----------entry equations

RD_entry(1) = { (result, ?) (t, ?) (z, ?) }
RD_entry(3) = { (result, ?) (t, ?) (z, ?) }
RD_entry(4) = RD_exit(3)
RD_entry(5) = RD_exit(4)
RD_entry(6) = RD_exit(5)
RD_entry(8) = { (result, ?) (t, ?) (z, ?) }
RD_entry(9) = RD_exit(8)
RD_entry(10) = RD_exit(1)
RD_entry(11) = RD_exit(10)


----------exit equations

RD_exit(1) = (RD_entry(1) \ { (t, ?) (t, 1) }) U { (t, 1) }
RD_exit(3) = (RD_entry(3) \ { (result, ?) (result, 3) (result, 5) (result, 8) }) U { (result, 3) }
RD_exit(4) = (RD_entry(4) \ {}) U {}
RD_exit(5) = (RD_entry(5) \ { (result, ?) (result, 3) (result, 5) (result, 8) }) U { (result, 5) }
RD_exit(6) = (RD_entry(6) \ {}) U {}
RD_exit(8) = (RD_entry(8) \ { (result, ?) (result, 3) (result, 5) (result, 8) }) U { (result, 8) }
RD_exit(9) = (RD_entry(9) \ {}) U {}
RD_exit(10) = (RD_entry(10) \ { (z, ?) (z, 10) }) U { (z, 10) }
RD_exit(11) = (RD_entry(11) \ {}) U {}


-----------RD solutions

entry solutions:
label 1: { (result, ?) (t, ?) (z, ?) }
label 3: {}
label 4: { (result, 3) }
label 5: { (result, 3) }
label 6: { (result, 5) }
label 8: {}
label 9: { (result, 8) }
label 10: { (result, ?) (t, 1) (z, ?) }
label 11: { (result, ?) (t, 1) (z, 10) }


exit solutions:
label 1: { (result, ?) (t, 1) (z, ?) }
label 3: { (result, 3) }
label 4: { (result, 3) }
label 5: { (result, 5) }
label 6: { (result, 5) }
label 8: { (result, 8) }
label 9: { (result, 8) }
label 10: { (result, ?) (t, 1) (z, 10) }
label 11: { (result, ?) (t, 1) (z, 10) }
